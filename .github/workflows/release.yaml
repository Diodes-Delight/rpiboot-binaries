name: Build release binaries

on:
  schedule:
    # https://crontab.guru
    - cron: "0 20 20 * *"
  # for manual testing
  workflow_dispatch:
  push:

jobs:   

  upload-release:
    runs-on: ubuntu-20.04
    needs: [build-macos-latest, build-linux, build-windows]

    steps:
    - uses: actions/checkout@v1
    - name: set release env
      run: |
        git clone --depth=1 https://github.com/raspberrypi/usbboot
        cd usbboot
        echo 'RPI_RELEASE_COMMIT<<EOF' >> $GITHUB_ENV
        git log --format="%h" -n 1 >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RPI_RELEASE_COMMIT }}
        release_name: Release ${{ env.RPI_RELEASE_COMMIT }}
        draft: false
        prerelease: false   
    - name: download artifacts
      uses: actions/download-artifact@v4
      with:
        path: uploads*
        merge-multiple: true
    - name: upload macos
      id: upload-macos-latest 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/rpiboot-macOS-latest.zip
        asset_name: rpiboot-macOS-latest.zip
        asset_content_type: application/zip  
    - name: upload linux
      id: upload-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/rpiboot-ubuntu-24-04.zip
        asset_name: rpiboot-ubuntu-24-04.zip
        asset_content_type: application/zip   
    - name: upload windows
      id: upload-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/rpiboot_setup.exe
        asset_name: rpiboot_setup.exe
        asset_content_type: application/octet-stream 


  build-macos-latest:
    runs-on: macos-latest

    steps:
    - name: Clone
      run: |
        git clone --depth=1 https://github.com/raspberrypi/usbboot 
    - name: Install libusb
      run: brew install libusb
    - name: Build
      run: |
        cd usbboot
        make
    - name: zip macos artifact
      run: |
        zip -r rpiboot-macOS-latest usbboot/rpiboot usbboot/msd usbboot/Readme.md usbboot/license 
    - name: upload rpiboot-macOS-latest artifact
      uses: actions/upload-artifact@v4
      with:
        name: uploads-macos
        path: rpiboot-macOS-latest.zip                  

  build-linux:

    runs-on: ubuntu-24.04

    steps:
    - name: Clone
      run: |
        git clone --depth=1 https://github.com/raspberrypi/usbboot 
    - name: Install libusb
      run: sudo apt install libusb-1.0-0-dev
    - name: Build
      run: |
        cd usbboot
        make
    - name: zip linux artifact
      run: |
        zip -r rpiboot-ubuntu-24-04 usbboot/rpiboot usbboot/msd usbboot/Readme.md usbboot/license  
    - name: upload linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: uploads-ubuntu-24-04
        path: rpiboot-ubuntu-24-04.zip

  build-windows:

    runs-on: windows-2019

    steps:
    - name: Set up Cygwin
      uses: egor-tensin/setup-cygwin@v3
      with:
        platform: x64
        packages: cmake gcc-core gcc-g++ libusb1.0-devel libusb1.0 zip
    - name: Clone
      run: |
        git clone --depth=1 https://github.com/raspberrypi/usbboot 
    - name: Build
      run: |
        cd usbboot
        sed -i 's/$(CC)/gcc/' .\Makefile
        make
    - name: Create installer
      run: |
        choco install nsis
        cd usbboot
        cp -r "C:\Program Files (x86)\NSIS" .
        NSIS/makensis /v2 win32/install_script.nsi
    - name: upload windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: uploads-windows
        path: usbboot/win32/rpiboot_setup.exe
